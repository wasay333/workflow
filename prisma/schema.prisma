// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
model Workflow{
  id          String @id @default(cuid())
  userId      String 
  name        String
  description String?
  defination  String
  executionPlan String?
  creditsCost Int @default(0)

cron String? //* * * * *

  status      String
  lastRunAt DateTime?
  lastRunId String?
  NextRunAt DateTime?
  lastRunStatus String?
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

executions WorkflowExecution[]
  //User cannot have two workflows with the same name
@@unique([name, userId])
}
model WorkflowExecution{
  id String @id @default(cuid())
  workflowId String
  userId String
  trigger String
  status String
  createdAt DateTime @default(now())
  startedAt DateTime?
  completedAt DateTime?
  defination String @default("{}")
  creditsConsumed Int @default(0)
  phases ExecutionPhase[]
  workflow Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
}
model ExecutionPhase{
  id String @id @default(cuid())
  userId String  
  status String
  number Int
  node String
  name String
  startedAt DateTime?
  completedAt DateTime?
  inputs String?
  outputs String?
  creditsConsumed Int?
  logs ExecutionLog[]
  workflowExecutionId String
  execution WorkflowExecution @relation(fields: [workflowExecutionId], references: [id], onDelete: Cascade)
}
model ExecutionLog{
id String @id @default(cuid())
logLevel String
message String
timestamp DateTime @default(now())
executionPhaseId String
executionPhase ExecutionPhase @relation(fields: [executionPhaseId], references: [id], onDelete: Cascade)
}
model UserBalance{
  userId String @id
  credits Int @default(0)
}
model Credential{
  id String @id @default(cuid())
  userId String
  name String
  value String
  createdAt DateTime @default(now())
@@unique([name, userId])
}
model UserParchase{
  id String @id @default(cuid())
  userId String
  stripeId String
  description String
  amount Int 
  currency String
  date DateTime @default(now())
}